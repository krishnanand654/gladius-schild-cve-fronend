const express = require("express");
const axios = require("axios");
const cors = require("cors");

const app = express();
const port = 8000; // Set the desired port number
app.use(cors());

app.use(express.json());

app.get("/api/cve", async (req, res) => {
  const { cveId } = req.query;
  const url = `https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=${cveId}`;
  const apiKey = "584b23ce-a77d-4ca8-849e-5ee93e574e78"; // Replace 'YOUR_API_KEY' with your actual API key

  try {
    const response = await axios.get(url, {
      headers: {
        "X-API-Key": apiKey,
      },
    });
    res.status(response.status).json(response.data);
  } catch (error) {
    res
      .status(500)
      .json({ error: "An error occurred while making the request" });
  }
});

app.get("/api/cve/all", async (req, res) => {
  const currentDateTime = new Date();
  const endDate =
    currentDateTime.toISOString().slice(0, 10) + "T00:00:00.000-05:00"; // Current date
  console.log(endDate);

  const startDate = new Date(
    currentDateTime.getTime() - 120 * 24 * 60 * 60 * 1000
  );
  const startDateString =
    startDate.toISOString().slice(0, 10) + "T23:59:59.999-05:00"; // 120 days before the current date
  console.log(startDateString);
  const url = `https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate=${startDateString}&pubEndDate=${endDate}&resultsPerPage=10`;

  console.log(url);
  const apiKey = "584b23ce-a77d-4ca8-849e-5ee93e574e78"; // Replace 'YOUR_API_KEY' with your actual API key

  try {
    const response = await axios.get(url, {
      headers: {
        "X-API-Key": apiKey,
      },
    });
    res.status(response.status).json(response.data);
  } catch (error) {
    res
      .status(500)
      .json({ error: "An error occurred while making the request" });
  }
});

app.listen(port, () => {
  console.log(`Proxy server is running on port ${port}`);
});
